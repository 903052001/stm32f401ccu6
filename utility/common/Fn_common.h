/*<FH+>************************************************************************/
/*                                                                            */
/* 版权所有: Copyright (C) 烽鸟出行. 2019. All rights reserved.              */
/*                                                                            */
/* 文件名称: Fn_common.h                                                      */
/* 内容摘要: 系统通用函数头文件                                              */
/* 其它说明: 无                                                               */
/* 当前版本: v 1.0.0                                                          */
/* 作    者: Leonard                                                          */
/* 完成日期: 2020-11-20                                                       */
/* 修改记录:                                                                  */
/*     修改日期          版本号     修改人          修改内容                 */
/* -------------------------------------------------------------------------- */
/*     2020-11-20        v 1.0.0     Leonard         创建文件                 */
/*<FH->************************************************************************/
#ifndef FN_COMMON_H
#define FN_COMMON_H

/******************************************************************************/
/*               #include（依次为标准库头文件、非标准库头文件）             */
/******************************************************************************/
#include "Fn_md5.h"
#include "Fn_sha1.h"

/******************************************************************************/
/*                              其他条件编译选项                             */
/******************************************************************************/
#ifdef __cplusplus
extern "C" {
#endif

/******************************************************************************/
/*                                  常量定义                                  */
/******************************************************************************/


/******************************************************************************/
/*                                 全局宏定义                                 */
/******************************************************************************/
#define BOOT_HW_VERSION             ("1.0.0")           /* 硬件版本号,升级后须调整 */
#define BOOT_FW_VERSION             ("1.0.0")           /* 软件版本号,升级后须调整 */

/**********stm32f401**************
*                                *  
*         bootloader(64K)        *   
*           sector[0~3]          *
*                                *
*--------------------------------*  
*                                *   
*           app(192K)            *   
*          sector[4~5]           *
*                                *
*--------------------------------*/
#define APP_UPGRADE_FLAG            (0x1A2B3C4D)        /* 需要升级标志位    */
#define APP_SRAM_START              (0x20000000)        /* SRAM起始地址      */
#define APP_SRAM_SIZE               (0x10000)           /* SRAM大小64KB      */
#define APP_FLASH_START             (0x08010000)        /* APP起始地址       */
#define APP_FLASH_END               (0x08040000)        /* APP结束地址       */
#define APP_SECTOR_START            (4)                 /* APP起始扇区       */
#define APP_SECTOR_END              (5)                 /* APP结束扇区       */

/*****************************W25Qxx 地址分配**********************************
—————————————————————————————————————————————————————
|        addresses         |   size  |   explain    |
—————————————————————————————————————————————————————
|  0x000000 -- 0x000FFF    |    4K   | APP参数区一  |
—————————————————————————————————————————————————————     
|  0x001000 -- 0x001FFF    |    4K   | APP参数区二  |                / hwVer(4B)
—————————————————————————————————————————————————————   / BOOT_INFO +  fwVer(4B)
|  0x002000 -- 0x003FFF    |    8K   | 预留         |  /    (12B)    \ appVer(4B)
————————————————————————————————————————————————————— /  
|  0x004000 -- 0x004FFF    |    4K   | BOOT参数区   |+    
————————————————————————————————————————————————————— \  
|  0x005000 -- 0x104FFF    |    1M   | IAP程序存储区|  \    (2K)    / IAP_Flag (4B)
—————————————————————————————————————————————————————   \ IAP_INFO +      ...
|  0x105000 -- 0xFFFFFF    |    nKB  |日志存储+其他 |               \ IAP_Sha1 (20B)
—————————————————————————————————————————————————————    
*******************************************************************************/
#define EFLASH_BOOT_INFO_ADDR       (0x004000)          /* BOOT信息存储地址  */
#define EFLASH_IAP_INFO_ADDR        (0x004800)          /* IAP信息存储地址   */

#define EFLASH_IAP_START            (0x005000)          /* IAP存储开始地址   */
#define EFLASH_IAP_END              (0x105000)          /* IAP存储结束地址   */

#define EFLASH_LOG_START            (0x105000)          /* LOG存储开始地址   */
#define EFLASH_LOG_END              (0xFFFFFF)          /* LOG存储结束地址   */

/******************************************************************************/
/*                              全局数据类型定义                             */
/******************************************************************************/
#pragma pack(1)

/*<ENUM+>**********************************************************************/
/* 枚举: CARRY_DIR                                                            */
/* 注释: 数据搬运方向                                                        */
/*<ENUM->**********************************************************************/
typedef enum
{
    STM_TO_STM = 0,
    STM_TO_W25Q,
    W25Q_TO_STM,
    W25Q_TO_W25Q,
} CARRY_DIR;

/*<ENUM+>**********************************************************************/
/* 枚举:                                                                      */
/* 注释: 读/写操作枚举                                                        */
/*<ENUM->**********************************************************************/
typedef enum
{
    READ = 0,
    WRITE = !READ,
}OPER_DIR;
    
/*<ENUM+>**********************************************************************/
/* 枚举: SYS_STATE                                                            */
/* 注释: 系统状态枚举                                                        */
/*<ENUM->**********************************************************************/
typedef enum
{
    SYS_INIT = 0,                         /* 系统初始化                      */
    SYS_CMD,                              /* 命令模式                        */
    SYS_IAP,                              /* IAP模式                         */
    SYS_LOAD,                             /* 跳转模式                        */
    SYS_ERR,                              /* 错误模式                        */
} SYS_STATE;

/*<ENUM+>*********************************************************************/
/* 枚举: FLASH_STATE                                                         */
/* 注释: 搬运状态枚举                                                       */
/*<ENUM->*********************************************************************/
typedef enum
{
    FLASH_CHECK = 0,                       /* 标志位校验                    */
    FLASH_ERASE,                           /* Flash 擦                      */
    FLASH_CARRY,                           /* code 搬运                     */
    FLASH_SURE,                            /* code 确认                     */
    FLASH_OUT,                             /* FLASH操作结束                 */
} FLASH_STATE;

/*<STRUCT+>********************************************************************/
/* 结构: _TIMER_DEV                                                           */
/* 注释: 软件定时器设备结构体                                                */
/*<STRUCT->********************************************************************/
struct _timer_dev
{
    unsigned char        index;                    /* 定时器ID               */
    unsigned char        isuse;                    /* 是否立即启用           */
    unsigned char        mode;                     /* 定时器模式             */
    unsigned int         reload;                   /* 定时器时长             */
    int                (*tmocb)(void *para);       /* 定时器超时回调         */
};
typedef struct _timer_dev * timer_dev_t;

/*<STRUCT+>********************************************************************/
/* 结构: _BOOT_PARAM                                                          */
/* 注释: 版本号相关信息                                                      */
/*<STRUCT->********************************************************************/
typedef struct _boot_param
{
      signed int     hwVer;                /* 硬件版本号                     */
      signed int     fwVer;                /* boot版本号                     */
      signed int     appVer;               /* 应用版本号                     */           
} BOOT_PARAM;

/*<STRUCT+>********************************************************************/
/* 结构: _IAP_PARAM                                                           */
/* 注释: IAP更新操作相关信息                                                 */
/*<STRUCT->********************************************************************/
typedef struct _iap_param
{
    unsigned int     IAP_Flag;             /* IAP更新标志(0x1A2B3C4D)        */
    unsigned int     IAP_Version;          /* IAP文件最新版本号              */
    unsigned int     IAP_Len;              /* IAP文件大小                    */
             char    IAP_Name[32];         /* IAP文件名                      */
    unsigned char    IAP_Md5[MD5_LEN];     /* IAP文件的MD5值                 */
    unsigned char    IAP_Sha1[SHA1_LEN];   /* IAP文件的SHA1值                */
} IAP_PARAM;

/*<STRUCT+>********************************************************************/
/* 结构: _SYS_PARAM                                                           */
/* 注释: 系统参数                                                             */
/*<STRUCT->********************************************************************/
typedef struct _sys_param
{
    SYS_STATE        Sys_State;             /* 系统状态                      */
    FLASH_STATE      Flash_State;           /* Flash操作状态                 */
    BOOT_PARAM       BOOT_Info;             /* BOOT标识信息                  */
    IAP_PARAM        IAP_Info;              /* IAP更新相关信息               */
} SYS_PARAM;

#pragma pack()

/******************************************************************************/
/*                                全局变量声明                                */
/******************************************************************************/


/******************************************************************************/
/*                                 全局函数原型                               */
/******************************************************************************/
int COMM_TimerInit(void);
int COMM_FlashStateSwitch(FLASH_STATE ivalue);
int COMM_SystemStateSwitch(SYS_STATE ivalue);
int COMM_GetCPUInfo(void);
int COMM_GetUpdateInfo(void);
int COMM_ClearUpdateFlag(void);
int COMM_SetUpdateInfo(struct _iap_param *iap);
int COMM_CmdmodeFlag(void);
int COMM_SysInitHandle(void);
int COMM_SysCmdHandle(void);
int COMM_SysIAPHandle(void);
int OMM_SysLoadHandle(void);
int COMM_SysErrHandle(void);
int boot_application(void);


#ifdef __cplusplus
}
#endif

#endif


