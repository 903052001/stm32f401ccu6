/*<FH+>************************************************************************/
/*                                                                            */
/* 版权所有: Copyright (C) 烽鸟出行. 2019. All rights reserved.               */
/*                                                                            */
/* 文件名称: Fn_matrix.h                                                      */
/* 内容摘要: 矩阵计算头文件                                                   */
/* 其它说明: 无                                                               */
/* 当前版本: v 1.0.0                                                          */
/* 作    者: Leonard                                                          */
/* 完成日期: 2020-11-26                                                       */
/* 修改记录:                                                                  */
/*     修改日期          版本号     修改人          修改内容                 */
/* -------------------------------------------------------------------------- */
/*     2020-11-26        v 1.0.0     Leonard         创建文件                 */
/*<FH->************************************************************************/
#ifndef FN_MATRIX_H
#define FN_MATRIX_H

/******************************************************************************/
/*               #include(依次为标准库头文件、非标准库头文件)                */
/******************************************************************************/


/******************************************************************************/
/*                              其他条件编译选项                              */
/******************************************************************************/
#ifdef __cplusplus
extern "C" {
#endif

/******************************************************************************/
/*                                  常量定义                                  */
/******************************************************************************/


/******************************************************************************/
/*                                 全局宏定义                                 */
/******************************************************************************/


/******************************************************************************/
/*                              全局数据类型定义                              */
/******************************************************************************/
/*<STRUCT+>********************************************************************/
/* 结构: _BOX                                                                 */
/* 注释: 目标框参数结构体                                                     */
/*<STRUCT->********************************************************************/
typedef struct _box
{
    int   ltpx;                                                /* 左上点x坐标  */
    int   ltpy;                                                /* 左上点y坐标  */
    int   rbpx;                                                /* 右下点x坐标  */
    int   rbpy;                                                /* 右下点y坐标  */
    int   xLen;                                                /* x轴整体总长  */
    int   yLen;                                                /* y轴整体总长  */
    int   xGap;                                                /* x轴网格间隙  */
    int   yGap;                                                /* y轴网格间隙  */
} box;

/******************************************************************************/
/*                                全局变量声明                                */
/******************************************************************************/


/******************************************************************************/
/*                                 全局函数原型                               */
/******************************************************************************/
void matrix_test(void);
void random_point_test(void);
void import_matrix_express_from_file(void);
int  matrix_solution_of_order_n(char *express[], int unknum, double result[]);
int  range_and_rate_by_two_points(box *box, double matrix[], int len);

#ifdef __cplusplus
}
#endif

#endif
